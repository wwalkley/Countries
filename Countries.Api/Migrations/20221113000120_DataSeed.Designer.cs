// <auto-generated />
using Countries.Api.Stores;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Countries.Api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221113000120_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("Countries.Api.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Auckland"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Wellington"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Canberra"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "Melbourne"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 3,
                            Name = "London"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 3,
                            Name = "Manchester"
                        });
                });

            modelBuilder.Entity("Countries.Api.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Population")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capital = "Wellington",
                            Name = "New Zealand",
                            Population = 5131480
                        },
                        new
                        {
                            Id = 2,
                            Capital = "Canberra",
                            Name = "Australia",
                            Population = 25890773
                        },
                        new
                        {
                            Id = 3,
                            Capital = "London",
                            Name = "England",
                            Population = 56489800
                        });
                });

            modelBuilder.Entity("Countries.Api.Entities.City", b =>
                {
                    b.HasOne("Countries.Api.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
